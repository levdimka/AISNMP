@model WEB_UI.Models.ModelReception

@{
    ViewBag.Title = "Статистика щодо пацієнта";
    Layout = "~/Views/Shared/_Doctor.cshtml";
}

<style>
    #chartdiv, #chartdiv1, #chartdiv2, #chartdiv3 {
        width: 100%;
        height: 250px;
    }
</style>

<h2>Картка № @Html.DisplayFor(model => model.queue.Pacient.Card_number), пацієнта : @Html.DisplayFor(model => model.queue.Pacient.Sourname) @Html.DisplayFor(model => model.queue.Pacient.Name)</h2>
<div class="row">
    <div class="col-md-12">
        <p class="lead"><b>Лікар :</b> @Html.DisplayFor(model => model.doctor.Sourname) @Html.DisplayFor(model => model.doctor.Name)</p>
        <p class="lead"><b>Фах :</b> @Html.DisplayFor(model => model.doctor.Specialization.Post_Specialization)</p>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @Html.ActionLink("Повернуться на прийом у лікаря", "Reception", "WindowDoctor", new { idDoctor = @Model.doctor.id, id_queue = @Model.queue.id }, new { @class = "btn btn-primary btn-lg" })
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-primary mb-3">
            <div class="card-header">СОН</div>
            <div class="card-body text-primary">
                <div id="chartdiv"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-primary mb-3">
            <div class="card-header">Вес</div>
            <div class="card-body text-primary">
                <div id="chartdiv1"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-primary mb-3">
            <div class="card-header">Сердце</div>
            <div class="card-body text-primary">
                <div id="chartdiv2"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-primary mb-3">
            <div class="card-header">Давление</div>
            <div class="card-body text-primary">
                <div id="chartdiv3"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
    <script>
        am5.ready(function () {

            function getRandomIntInclusive(min, max) {
                min = Math.ceil(min);
                max = Math.floor(max);
                return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются
            }


            var root = am5.Root.new("chartdiv");
            root.setThemes([
                am5themes_Animated.new(root)
            ]);
            var chart = root.container.children.push(
                am5percent.PieChart.new(root, {
                    endAngle: 270
                })
            );
            var series = chart.series.push(
                am5percent.PieSeries.new(root, {
                    valueField: "value",
                    categoryField: "category",
                    endAngle: 270
                })
            );

            series.states.create("hidden", {
                endAngle: -90
            });

            var sl = getRandomIntInclusive(400, 600)

            series.data.setAll([{
                category: "фаза сну",
                value: sl
            }, {
                category: "фаза активності",
                value: 1440 - sl
            }]);
            series.appear(1000, 100);

            //------
            var root1 = am5.Root.new("chartdiv1");
            root1.setThemes([
                am5themes_Animated.new(root1)
            ]);
            var chart = root1.container.children.push(am5xy.XYChart.new(root1, {
                panX: true,
                panY: true,
                wheelX: "panX",
                wheelY: "zoomX",
                pinchZoomX: true
            }));
            var cursor = chart.set("cursor", am5xy.XYCursor.new(root1, {}));
            cursor.lineY.set("visible", false);

            var xRenderer = am5xy.AxisRendererX.new(root1, { minGridDistance: 30 });
            xRenderer.labels.template.setAll({
                rotation: -90,
                centerY: am5.p50,
                centerX: am5.p100,
                paddingRight: 15
            });

            var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root1, {
                maxDeviation: 0.3,
                categoryField: "country",
                renderer: xRenderer,
                tooltip: am5.Tooltip.new(root1, {})
            }));

            var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root1, {
                maxDeviation: 0.3,
                renderer: am5xy.AxisRendererY.new(root1, {})
            }));

            var series = chart.series.push(am5xy.ColumnSeries.new(root1, {
                name: "Series 1",
                xAxis: xAxis,
                yAxis: yAxis,
                valueYField: "value",
                sequencedInterpolation: true,
                categoryXField: "country",
                tooltip: am5.Tooltip.new(root1, {
                    labelText: "{valueY}"
                })
            }));

            series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });
            series.columns.template.adapters.add("fill", function (fill, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            series.columns.template.adapters.add("stroke", function (stroke, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            var data = [{
                country: "Січень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Лютий",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Березень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Квітень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Травень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Червень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Липень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Серпень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Вересень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Жовтень",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Листопад",
                value: getRandomIntInclusive(79, 85)
            }, {
                country: "Грудень",
                value: getRandomIntInclusive(79, 85)
            }];

            xAxis.data.setAll(data);
            series.data.setAll(data);
            //---------------

            var root2 = am5.Root.new("chartdiv2");
            root2.setThemes([
                am5themes_Animated.new(root2)
            ]);
            var chart2 = root2.container.children.push(am5xy.XYChart.new(root2, {
                panX: true,
                panY: true,
                wheelX: "panX",
                wheelY: "zoomX",
                pinchZoomX: true
            }));

            var cursor2 = chart2.set("cursor", am5xy.XYCursor.new(root2, {
                behavior: "none"
            }));
            cursor2.lineY.set("visible", false);
            // Generate random data
            var date = new Date('03/15/2019');
            date.setHours(0, 0, 0, 0);
            var value = 100;

            function generateData() {
                //value = Math.round((Math.random() * 10 - 5) + value);
                value = getRandomIntInclusive(50, 120);
                am5.time.add(date, "day", 1);
                return {
                    date: date.getTime(),
                    value: value
                };
            }
            function generateDatas(count) {
                var data = [];
                for (var i = 0; i < count; ++i) {
                    data.push(generateData());
                }
                return data;
            }
            var xAxis = chart2.xAxes.push(am5xy.DateAxis.new(root2, {
                maxDeviation: 0.2,
                baseInterval: {
                    timeUnit: "day",
                    count: 1
                },
                renderer: am5xy.AxisRendererX.new(root2, {}),
                tooltip: am5.Tooltip.new(root2, {})
            }));

            var yAxis = chart2.yAxes.push(am5xy.ValueAxis.new(root2, {
                renderer: am5xy.AxisRendererY.new(root2, {})
            }));

            var series1 = chart2.series.push(am5xy.LineSeries.new(root2, {
                name: "Series",
                xAxis: xAxis,
                yAxis: yAxis,
                valueYField: "value",
                valueXField: "date",
                tooltip: am5.Tooltip.new(root2, {
                    labelText: "{valueY}"
                })
            }));

            chart2.set("scrollbarX", am5.Scrollbar.new(root2, {
                orientation: "horizontal"
            }));


            // Set data
            var data = generateDatas(1200);
            series1.data.setAll(data);

            series1.appear(1000);
            chart2.appear(1000, 100);

            //---------------

            var root3 = am5.Root.new("chartdiv3");

            root3.setThemes([
                am5themes_Animated.new(root3)
            ]);

            var chart3 = root3.container.children.push(am5xy.XYChart.new(root3, {
                panX: true,
                panY: true,
                wheelX: "panX",
                wheelY: "zoomX",
                pinchZoomX: true
            }));

            var cursor3 = chart3.set("cursor", am5xy.XYCursor.new(root3, {
                behavior: "none"
            }));

            cursor3.lineY.set("visible", false);
            // Generate random data
            var date = new Date('03/15/2019');
            date.setHours(0, 0, 0, 0);
            var value = 100;

            function generateData() {
                //value = Math.round((Math.random() * 10 - 5) + value);
                value = getRandomIntInclusive(100, 180);
                am5.time.add(date, "day", 1);
                return {
                    date: date.getTime(),
                    value: value
                };
            }

            function generateDatas(count) {
                var data = [];
                for (var i = 0; i < count; ++i) {
                    data.push(generateData());
                }
                return data;
            }

            var xAxis3 = chart3.xAxes.push(am5xy.DateAxis.new(root3, {
                maxDeviation: 0.2,
                baseInterval: {
                    timeUnit: "day",
                    count: 1
                },
                renderer: am5xy.AxisRendererX.new(root3, {}),
                tooltip: am5.Tooltip.new(root3, {})
            }));

            var yAxis3 = chart3.yAxes.push(am5xy.ValueAxis.new(root3, {
                renderer: am5xy.AxisRendererY.new(root3, {})
            }));

            var series3 = chart3.series.push(am5xy.LineSeries.new(root3, {
                name: "Series3",
                xAxis: xAxis3,
                yAxis: yAxis3,
                valueYField: "value",
                valueXField: "date",
                tooltip: am5.Tooltip.new(root3, {
                    labelText: "{valueY}"
                })
            }));

            chart3.set("scrollbarX", am5.Scrollbar.new(root3, {
                orientation: "horizontal"
            }));


            // Set data
            var data3 = generateDatas(1200);
            series3.data.setAll(data3);

            series3.appear(1000);
            chart3.appear(1000, 100);


        });
    </script>

}

